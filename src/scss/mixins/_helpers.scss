@function max($numbers...) {
	@return m#{a}x(#{$numbers});
}

@function min($numbers...) {
	@return m#{i}n(#{$numbers});
}

@mixin supports-safe-area-insets {
	// stylelint-disable-next-line
	@supports (padding: max(0px)) {
		@content;
	}
}

@mixin hover {
	.has-hover &:not([disabled]):hover {
		@content;
	}
}

@mixin active-hover {
	.has-hover &.is-active:hover {
		@content;
	}
}

@mixin active {
	&.is-active {
		@content;
	}
}

@mixin disabled {
	&.is-disabled,
	&:disabled {
		@content;
	}
}

@mixin text-border($color, $border, $ieColor, $width: 1px, $ieWidth: 1px) {
	// stylelint-disable-next-line
	text-shadow: ($ieWidth) ($ieWidth) $border, 0 0 $border, $width ($ieWidth) $border, 0 $width $border;
	color: $ieColor;

	@supports (-webkit-text-stroke: $width $border) {
		text-shadow: none;
		// stylelint-disable-next-line
		-webkit-text-stroke: $width $border;
		color: $color;
	}
}

@mixin font-face($url, $font-family, $font-weight, $font-style) {
	@font-face {
		src:
			url($url + ".woff2") format("woff2"),
			url($url + ".woff") format("woff");
		font-family: $font-family;
		font-weight: $font-weight;
		font-style: $font-style;
		font-display: swap;
	}
}

@mixin retina {
	// stylelint-disable-next-line media-feature-name-no-vendor-prefix
	@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
		@content;
	}
}

/* stylelint-disable */
@mixin placeholder {
	&::-webkit-input-placeholder {
		// WebKit, Blink, Edge
		@content;
	}

	&::-moz-placeholder {
		// Firefox 19+
		@content;
	}

	&:-ms-input-placeholder {
		// Internet Explorer 10-11
		@content;
	}
}
/* stylelint-enable */

@mixin transition($x...){
  -webkit-transition: $x;
  -moz-transition: $x;
  -ms-transition: $x;
  -o-transition: $x;
  transition: $x;
}

/* flexbox */

@mixin flexbox {
	display: -webkit-box;
	display: -webkit-flex;
	display: -moz-flex;
	display: -ms-flexbox;
	display: flex;
}

@mixin align-items($value: stretch) {
	@if $value == flex-start {
		-webkit-box-align: start;
		-ms-flex-align: start;
	} @else if $value == flex-end {
		-webkit-box-align: end;
		-ms-flex-align: end;
	} @else {
		-webkit-box-align: $value;
		-ms-flex-align: $value;
	}
	-webkit-align-items: $value;
	-moz-align-items: $value;
	align-items: $value;
}

@mixin justify-content($value: flex-start) {
  @if $value == flex-start {
		-webkit-box-pack: start;
		-ms-flex-pack: start;
	} @else if $value == flex-end {
		-webkit-box-pack: end;
		-ms-flex-pack: end;
	} @else if $value == space-between {
		-webkit-box-pack: justify;
		-ms-flex-pack: justify;
	} @else {
		-webkit-box-pack: $value;
		-ms-flex-pack: $value;
	}
	-webkit-justify-content: $value;
	-moz-justify-content: $value;
	justify-content: $value;
}

@mixin flex-direction($value: row) {
	@if $value == row-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: horizontal;
	} @else if $value == column {
		-webkit-box-direction: normal;
		-webkit-box-orient: vertical;
	} @else if $value == column-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: vertical;
	} @else {
		-webkit-box-direction: normal;
		-webkit-box-orient: horizontal;
	}
	-webkit-flex-direction: $value;
	-moz-flex-direction: $value;
	-ms-flex-direction: $value;
	flex-direction: $value;
}